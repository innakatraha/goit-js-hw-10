{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nlet userSelectedDate = null;\nconst btn = document.querySelector('[data-start]');\nbtn.disabled = true;\nlet timerId = null;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    const isPastDate = userSelectedDate.getTime() <= Date.now();\n\n    if (isPastDate) {\n      iziToast.show({\n        message: 'Please choose a date in the future.',\n        position: 'center',\n      });\n    }\n\n    btn.disabled = isPastDate;\n  },\n};\nflatpickr('#datetime-picker', options);\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent =\n    addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent =\n    addLeadingZero(seconds);\n}\nbtn.addEventListener('click', () => {\n  btn.disabled = true;\n  if (timerId) {\n    clearInterval(timerId);\n  }\n  timerId = setInterval(() => {\n    const timeDifference = userSelectedDate - new Date();\n    if (timeDifference <= 0) {\n      clearInterval(timerId);\n      updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      return;\n    }\n    const timeComponents = convertMs(timeDifference);\n    updateTimerDisplay(timeComponents);\n  }, 1000);\n});\n"],"names":["userSelectedDate","btn","timerId","options","selectedDates","isPastDate","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimerDisplay","timeDifference","timeComponents"],"mappings":"0IAIA,IAAIA,EAAmB,KACvB,MAAMC,EAAM,SAAS,cAAc,cAAc,EACjDA,EAAI,SAAW,GACf,IAAIC,EAAU,KACd,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBJ,EAAmBI,EAAc,CAAC,EAElC,MAAMC,EAAaL,EAAiB,QAAS,GAAI,KAAK,IAAG,EAErDK,GACFC,EAAS,KAAK,CACZ,QAAS,sCACT,SAAU,QAClB,CAAO,EAGHL,EAAI,SAAWI,CAChB,CACH,EACAE,EAAU,mBAAoBJ,CAAO,EACrC,SAASK,EAAUC,EAAI,CAKrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CACA,SAASC,EAAmB,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7D,SAAS,cAAc,aAAa,EAAE,YAAcC,EAAeJ,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcI,EAAeH,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCG,EAAeF,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCE,EAAeD,CAAO,CAC1B,CACAZ,EAAI,iBAAiB,QAAS,IAAM,CAClCA,EAAI,SAAW,GACXC,GACF,cAAcA,CAAO,EAEvBA,EAAU,YAAY,IAAM,CAC1B,MAAMe,EAAiBjB,EAAmB,IAAI,KAC9C,GAAIiB,GAAkB,EAAG,CACvB,cAAcf,CAAO,EACrBc,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAChE,MACD,CACD,MAAME,EAAiBV,EAAUS,CAAc,EAC/CD,EAAmBE,CAAc,CAClC,EAAE,GAAI,CACT,CAAC"}